{"version":3,"sources":["modules/order-boock-data/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["OrderBookData","state","data","newData","titles","isAllData","filterData","bid","ask","high","low","last","symbol","filterType","webSocket","getSymbols","ws","WebSocket","onopen","send","JSON","stringify","onmessage","event","parse","result","forEach","obj","createList","responseRates","getRates","id","params","onclose","close","item","isTitle","updateRowColor","i","findIndex","_item","push","setState","writeTitle","text","find","x","baseCurrency","feeCurrency","toggleSort","key","showAllList","getData","bubbleSortDown","slice","bubbleSortUp","element","index","array","lastChange","setTimeout","type","swapp","n","length","temp","this","className","onClick","map","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9be0dbe8.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './style.scss'\r\n\r\nclass OrderBookData extends Component {\r\n  state = {\r\n    data: [],\r\n    newData: [],\r\n    titles: [],\r\n    isAllData: false,\r\n    filterData: {\r\n      bid: false,\r\n      ask: false,\r\n      high: false,\r\n      low: false,\r\n      last: true,\r\n      symbol: false,\r\n    },\r\n    filterType: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.webSocket()\r\n  }\r\n\r\n  webSocket = () => {\r\n    const getSymbols = {\r\n      \"method\": \"getSymbols\",\r\n      \"params\": {},\r\n      \"id\": 123\r\n    };\r\n\r\n    const ws = new WebSocket('wss://api.exchange.bitcoin.com/api/2/ws');\r\n    ws.onopen = () => {\r\n      ws.send(JSON.stringify(getSymbols));\r\n    };\r\n    ws.onmessage = (event) => {\r\n      const response = JSON.parse(event.data);\r\n\r\n      const symbols = response.result;\r\n      symbols.forEach(obj => {\r\n        this.createList(obj, true);\r\n        const getRates = {\r\n          \"method\": \"subscribeTicker\",\r\n          \"params\": {\r\n            \"symbol\": obj.id,\r\n          },\r\n          \"id\": 123\r\n        };\r\n        let responseRates;\r\n        ws.send(JSON.stringify(getRates));\r\n        ws.onmessage = (event) => {\r\n          responseRates = JSON.parse(event.data);\r\n          this.createList(responseRates.params, false);\r\n        };\r\n      })\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      ws.close();\r\n    };\r\n  };\r\n\r\n\r\n  // create list and titles\r\n  createList = (item, isTitle) => { // (1)\r\n    const {data, titles} = this.state;\r\n    if (item) {\r\n      this.updateRowColor(item);\r\n\r\n      if (isTitle) {\r\n        const i = titles.findIndex(_item => _item.id === item.id);\r\n        if (i > -1) titles[i] = item; // (2)\r\n        else titles.push(item);\r\n      } else {\r\n        const i = data.findIndex(_item => _item.symbol === item.symbol);\r\n        if (i > -1) data[i] = item; // (2)\r\n        else data.push(item);\r\n      }\r\n    }\r\n    this.setState({data, titles})\r\n\r\n  };\r\n\r\n  // for left titles\r\n  writeTitle = (titles, item) => {\r\n    let text = '';\r\n    if (titles && item) {\r\n      text = titles.find(x => item.symbol === x.id);\r\n      text = text.baseCurrency + ' / ' + text.feeCurrency\r\n    }\r\n    return text\r\n  };\r\n\r\n  // click on header tags  to sort\r\n  toggleSort = (key) => {\r\n    const {filterData} = this.state;\r\n    filterData[key] = !filterData[key];\r\n    this.setState({filterData, filterType: key}, () => {\r\n    })\r\n  };\r\n\r\n  // button  click for show all  list or 50 items\r\n  showAllList = () => {\r\n    this.setState({isAllData: !this.state.isAllData})\r\n  };\r\n\r\n  // return  new data array\r\n  getData = () => {\r\n    const {data, isAllData, filterData, filterType} = this.state;\r\n    let newData;\r\n    if (data) {\r\n      if (isAllData) {\r\n        newData = this.bubbleSortDown(data, 'last')\r\n      } else {\r\n        newData = this.bubbleSortDown(data, filterType).slice(0, 50);\r\n        newData = this.bubbleSortDown(newData, 'last')\r\n      }\r\n\r\n      if (filterData[filterType]) {\r\n        newData = this.bubbleSortDown(newData, filterType)\r\n\r\n      } else {\r\n        newData = this.bubbleSortUp(newData, filterType)\r\n      }\r\n    }\r\n    return newData\r\n  };\r\n\r\n  updateRowColor = (item) => {\r\n    const {data} = this.state;\r\n    data.forEach((element, index, array) => {\r\n      if (item.last && element.last && item.symbol === element.symbol) {\r\n        if (item.last > element.last) {\r\n          item.lastChange = 'up';\r\n        } else if (item.last < element.last) {\r\n          item.lastChange = 'down';\r\n        } else {\r\n          item.lastChange = '';\r\n        }\r\n        setTimeout(() => {\r\n          item.lastChange = '';\r\n\r\n        }, 0)\r\n      }\r\n    });\r\n  };\r\n\r\n  bubbleSortUp = (array, type) => {\r\n    let swapp;\r\n    let n = array.length - 1;\r\n    let x = array;\r\n    do {\r\n      swapp = false;\r\n      for (let i = 0; i < n; i++) {\r\n        if (type === 'symbol') {\r\n          if (x[i][type] > x[i + 1][type]) {\r\n            let temp = x[i];\r\n            x[i] = x[i + 1];\r\n            x[i + 1] = temp;\r\n            swapp = true;\r\n          }\r\n        } else {\r\n          if (+x[i][type] > +x[i + 1][type]) {\r\n            let temp = x[i];\r\n            x[i] = x[i + 1];\r\n            x[i + 1] = temp;\r\n            swapp = true;\r\n          }\r\n        }\r\n      }\r\n      n--;\r\n    } while (swapp);\r\n    return x;\r\n  };\r\n  bubbleSortDown = (array, type) => {\r\n    let swapp;\r\n    let n = array.length - 1;\r\n    let x = array;\r\n    do {\r\n      swapp = false;\r\n      for (let i = 0; i < n; i++) {\r\n\r\n        if (type === 'symbol') {\r\n          if (x[i][type] < x[i + 1][type]) {\r\n            let temp = x[i];\r\n            x[i] = x[i + 1];\r\n            x[i + 1] = temp;\r\n            swapp = true;\r\n          }\r\n        } else {\r\n          if (+x[i][type] < +x[i + 1][type]) {\r\n            let temp = x[i];\r\n            x[i] = x[i + 1];\r\n            x[i + 1] = temp;\r\n            swapp = true;\r\n          }\r\n        }\r\n      }\r\n      n--;\r\n    } while (swapp);\r\n    return x;\r\n  };\r\n\r\n  render() {\r\n    const {data, titles, isAllData} = this.state;\r\n    return (\r\n        <div className=\"G-container\">\r\n            <h1>Exchange Quotes</h1>\r\n          <button className='P-show-all-brn'\r\n                  onClick={this.showAllList}>{!isAllData ? 'Show all' : 'Show top 50'}</button>\r\n          {data ? <div className='P-table-block'>\r\n            <div className='P-table-header'>\r\n              <ul className='G-flex'>\r\n                <li onClick={() => this.toggleSort('symbol')}\r\n                    className={`${this.state.filterData.symbol ? 'P-up' : ''}`}>Ticker\r\n                </li>\r\n                <li onClick={() => this.toggleSort('bid')}\r\n                    className={`${this.state.filterData.bid ? 'P-up' : ''}`}>Bid\r\n                </li>\r\n                <li onClick={() => this.toggleSort('ask')}\r\n                    className={`${this.state.filterData.ask ? 'P-up' : ''}`}>Ask\r\n                </li>\r\n                <li onClick={() => this.toggleSort('high')}\r\n                    className={`${this.state.filterData.high ? 'P-up' : ''}`}>High\r\n                </li>\r\n                <li onClick={() => this.toggleSort('low')}\r\n                    className={`${this.state.filterData.low ? 'P-up' : ''}`}>Low\r\n                </li>\r\n                <li onClick={() => this.toggleSort('last')}\r\n                    className={`${this.state.filterData.last ? 'P-up' : ''}`}>Last\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className='P-table-body'>\r\n              {this.getData().map((item, index) => {\r\n                return <ul key={index} className={`G-flex ${item.lastChange}`}>\r\n                  <li>{this.writeTitle(titles, item)}</li>\r\n                  <li>{item.bid  || '—'}</li>\r\n                  <li>{item.ask  || '—'}</li>\r\n                  <li>{item.high || '—'}</li>\r\n                  <li>{item.low  || '—'}</li>\r\n                  <li>{item.last || '—'}</li>\r\n                </ul>\r\n              })}\r\n            </div>\r\n          </div> : null}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrderBookData;\r\n","import React, {Component} from 'react';\nimport OrderBookData from \"./modules/order-boock-data\";\n\nclass App extends Component {\n\n  render() {\n    return (\n        <OrderBookData/>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}